// 正規分布の累積確率
// A.m.マーリの方法
double qnorm(double u)
{
    static double a[9] = {   1.24818987e-4, -1.075204047e-3, 5.198775019e-3,
        -0.019198292004, 0.059054035642,-0.151968751364,
        0.319152932694,-0.5319230073,   0.797884560593};
    static double b[15] = { -4.5255659e-5,   1.5252929e-4,  -1.9538132e-5,
        -6.76904986e-4,  1.390604284e-3,-7.9462082e-4,
        -2.034254874e-3, 6.549791214e-3,-0.010557625006,
        0.011630447319,-9.279453341e-3, 5.353579108e-3,
        -2.141268741e-3, 5.35310549e-4,  0.999936657524};
    double w, y, z;
    int i;

    if(u == 0.) return 0.5;
    y = u / 2.;
    if(y < -6.) return 0.;
    if(y > 6.)      return 1.;
    if(y < 0.)      y = - y;
    if(y < 1.) {
        w = y * y;
        z = a[0];
        for(i = 1; i < 9; i++)      z = z * w + a[i];
        z *= (y * 2.);
    } else {
        y -= 2.;
        z = b[0];
        for(i = 1; i < 15; i++) z = z * y + b[i];
    }

    if(u < 0.)  return (1. - z) / 2.;
    return (1. + z) / 2.;
}

// 正規分布のパーセント点
// 戸田の近似式
double pnorm(double qn)
{
    static double b[11] = {  1.570796288,     0.03706987906,  -0.8364353589e-3,
        -0.2250947176e-3, 0.6841218299e-5, 0.5824238515e-5,
        -0.104527497e-5,  0.8360937017e-7,-0.3231081277e-8,
        0.3657763036e-10,0.6936233982e-12};
    double w1, w3;
    int i;

    if(qn < 0. || 1. < qn) {
        fprintf(stderr, "Error : qn <= 0 or qn >= 1  in pnorm()!\n");
        return 0.;
    }
    if(qn == 0.5)   return 0.;

    w1 = qn;
    if(qn > 0.5)    w1 = 1. - w1;
    w3 = -log(4. * w1 * (1. - w1));
    w1 = b[0];
    for(i = 1; i < 11; i++) w1 += (b[i] * pow(w3, (double)i));
    if(qn > 0.5)    return sqrt(w1 * w3);
    return -sqrt(w1 * w3);
}
